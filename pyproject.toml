[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dashcam-project"
version = "0.1.0"
description = "Tiger Style C++ Dashcam project with Python tooling"
readme = "README.md"
requires-python = ">=3.8.1"
license = {text = "MIT"}
authors = [
    {name = "Dashcam Project Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies for development tooling
dependencies = [
    "conan>=2.19.1",
    "markdown>=3.4.0",
    "pygments>=2.15.0",
    "watchdog>=3.0.0",
]

# Optional dependencies for different use cases
[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-html>=3.2.0",
    "pytest-json-report>=1.5.0",
]
docs = [
    "markdown>=3.4.0",
    "pygments>=2.15.0",
    "watchdog>=3.0.0",
    "jinja2>=3.1.0",
]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/your-org/dashcam"
Documentation = "https://your-org.github.io/dashcam"
Repository = "https://github.com/your-org/dashcam.git"
Issues = "https://github.com/your-org/dashcam/issues"

[tool.hatch.build.targets.wheel]
packages = ["python"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=python",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--html=tests/reports/pytest-report.html",
    "--self-contained-html",
    "--json-report",
    "--json-report-file=tests/reports/pytest-report.json"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
